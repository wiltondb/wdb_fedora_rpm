--- a/contrib/babelfishpg_tsql/Makefile
+++ b/contrib/babelfishpg_tsql/Makefile
@@ -73,10 +73,9 @@ OBJS += src/tsql_for/forxml_old.o
 OBJS += src/tsql_analyze.o
 OBJS += src/linked_servers.o
 
-export ANTLR4_JAVA_BIN=java
 export ANTLR4_RUNTIME_LIB=-lantlr4-runtime
-export ANTLR4_RUNTIME_INCLUDE_DIR=/usr/local/include/antlr4-runtime
-export ANTLR4_RUNTIME_LIB_DIR=/usr/local/lib
+export ANTLR4_RUNTIME_INCLUDE_DIR=/usr/include/antlr4-runtime
+export ANTLR4_RUNTIME_LIB_DIR=./
 
 OBJS += src/pltsql_bulkcopy.o
 
@@ -85,8 +84,12 @@ PG_CXXFLAGS += -Wno-deprecated -Wno-error=attributes -Wno-suggest-attribute=form
 PG_CXXFLAGS += -Wno-undef -Wall -Wcpp
 PG_CXXFLAGS += -Wno-register # otherwise C++17 gags on PostgreSQL headers
 PG_CXXFLAGS += -I$(ANTLR4_RUNTIME_INCLUDE_DIR)
+# GCC 13 ANTLR headers error:
+# 'virtual bool antlr4::tree::ParseTree::operator==(const antlr4::tree::ParseTree&) const' was hidden
+PG_CXXFLAGS += -Wno-error=overloaded-virtual
 PG_CFLAGS += -g -Werror
 PG_CFLAGS += -fstack-protector-strong
+PG_CFLAGS += -fcommon -Wno-error=format-security -Wno-error=maybe-uninitialized -Wno-error=infinite-recursion
 PG_CPPFLAGS += -I$(TSQLSRC) -I$(PG_SRC) -DFAULT_INJECTOR
 
 SHLIB_LINK += -L$(ANTLR4_RUNTIME_LIB_DIR) $(ANTLR4_RUNTIME_LIB) -lcrypto
@@ -166,13 +169,6 @@ GEN_KEYWORDLIST = $(PERL) -I $(TOOLSDIR) $(TOOLSDIR)/gen_keywordlist.pl
 GEN_KEYWORDLIST_DEPS = $(TOOLSDIR)/gen_keywordlist.pl $(TOOLSDIR)/PerfectHash.pm
 TSQLSRC = .
 
-antlr/Makefile: antlr/CMakeLists.txt antlr/TSqlLexer.g4 antlr/TSqlLexer.g4
-	cd antlr && $(cmake) . && cd ..
-
-.PHONY: antlr/libantlr_tsql.a  # to allow CMake's make check the build
-antlr/libantlr_tsql.a: antlr/Makefile
-	$(MAKE) -C $(@D) all
-
 # See notes in src/backend/parser/Makefile about the following two rules
 src/pl_gram.h: src/pl_gram.c
 	touch $@
--- a/contrib/babelfishpg_tsql/antlr/CMakeLists.txt
+++ b/contrib/babelfishpg_tsql/antlr/CMakeLists.txt
@@ -4,15 +4,16 @@ CMAKE_MINIMUM_REQUIRED(VERSION 3.7 FATAL_ERROR)
 list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake-dir)
 
 # compiler must be 11 or 14
-set(CMAKE_CXX_STANDARD 14)
-set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -O2 -ggdb -w -Wno-deprecated")
-set(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -fPIC -O2 -ggdb -w -Wno-deprecated")
+set(CMAKE_CXX_STANDARD 17)
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -DUSE_UTF8_INSTEAD_OF_CODECVT")
 
 message(STATUS "CMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
+message(STATUS "CMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}")
 
 # add antrl4cpp artifacts to project environment
 #include_directories($ENV{ANTLR4_RUNTIME_INCLUDE_DIR})
-SET (MYDIR /usr/local/include/antlr4-runtime/)
+SET (MYDIR /usr/include/antlr4-runtime/)
 include_directories(${MYDIR})
 
 # set variable pointing to the antlr tool that supports C++
